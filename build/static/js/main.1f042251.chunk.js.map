{"version":3,"sources":["CoverItem.js","Music.js","App.js","serviceWorker.js","index.js"],"names":["CoverItem","width","$","find","outerWidth","css","react_default","a","createElement","style","backgroundImage","this","props","channel","cover_small","name","Component","Music","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","$btnCollect","hasClass","removeClass","addClass","className","onClick","toggleCollect","bind","onclickPlay","onNext","chName","song","title","onChangeTime","artist","App","channels","channelId","channelName","isToButtom","isToStart","isLoadAnimate","lyric","audio","Audio","autoplay","getJSON","done","ret","stateCopy","JSON","parse","stringify","setState","fail","console","log","_this2","coverWidth","rowCount","Math","floor","animate","left","parseInt","_this3","event","el","currentTarget","index","indexOf","parentElement","children","Id","channel_id","Name","siblings","playSong","src","url","picture","loadLyric","sid","$play","pause","play","min","currentTime","sec","length","text","duration","line","boomText","e","percent","clientX","getBoundingClientRect","x","getComputedStyle","lyricObj","split","forEach","times","match","Array","isArray","time","replace","_this4","covers","map","item","key","clickActive","CoverItem_CoverItem","addEventListener","clearInterval","statusClock","setInterval","updateStatue","id","Music_Music","chId","clickPlay","playNext","changeTime","clickLeft","clickRight","fn","type","html","word","join","$boomTexts","clock","eq","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f042251.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport './CoverItem.css'\r\nimport $ from 'jquery'\r\n\r\nexport default class CoverItem extends Component{\r\n  componentDidMount(){\r\n    var width = $('footer').find('li').outerWidth(true)\r\n    //console.log(width)\r\n    $('ul').css({width: 40 * width + 'px'})\r\n  }\r\n  render(){\r\n    return(\r\n      <div>\r\n        <div style={{backgroundImage: 'url('+this.props.channel.cover_small + ')'}}></div>\r\n        <h3>{this.props.channel.name}</h3>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport './Music.css'\r\nimport $ from 'jquery'\r\n\r\nexport default class Music extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      \r\n    }\r\n  }\r\n  toggleCollect(){\r\n    var $btnCollect = $('.btn-collect')\r\n    if($btnCollect.hasClass('active')){\r\n      $btnCollect.removeClass('active')\r\n    }else{\r\n      $btnCollect.addClass('active')\r\n    }\r\n  }\r\n  render(){\r\n    return(\r\n      <main className='layout'>\r\n        <div className=\"music-panel\">\r\n          <figure></figure>\r\n          <div className=\"actions clearfix\">\r\n            <span className=\"btn-collect iconfont icon-like\"onClick={this.toggleCollect.bind(this)}></span>\r\n            <span className=\"btn-play iconfont icon-play\" onClick={this.props.onclickPlay}></span>\r\n            <span className=\"btn-next iconfont icon-next\" onClick={this.props.onNext}></span>\r\n          </div>\r\n        </div>\r\n        <div className=\"detail\">\r\n          <span className=\"tag\">{this.props.chName || 'stark'}</span>\r\n          <h1>{this.props.song.title || 'SONG NAME'}</h1>\r\n          <ul className=\"icons clearfix\">\r\n            <li><span className=\"iconfont icon-music\">1234</span></li>\r\n            <li><span className=\"iconfont icon-like\">123</span></li>\r\n            <li><span className=\"iconfont icon-appreciate\">12</span></li>\r\n          </ul>\r\n          <div className=\"time-area\">\r\n            <div className=\"bar\" onClick={this.props.onChangeTime}>\r\n              <div className=\"bar-progress\"></div>\r\n            </div>\r\n            <div className=\"current-time\">0:00</div>\r\n          </div>\r\n          <div className=\"author\">{this.props.song.artist || 'author'}</div>\r\n          <div className=\"lyric\">\r\n            <p>lyric</p>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport 'normalize.css'\nimport './reset.css'\nimport $ from 'jquery'\nimport CoverItem from './CoverItem'\nimport Music from './Music'\n//import {getChannels} from './DataJSON'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      channels: [],\n      channelId: '',\n      channelName: 'stark',\n      isToButtom: false,\n      isToStart: true,\n      isLoadAnimate: false,\n      song: [],\n      lyric: {}\n    }\n    this.audio = new Audio()\n    this.audio.autoplay = true\n  }\n  componentDidMount(){\n    var _this =this\n    $.getJSON('https://jirenguapi.applinzi.com/fm/getChannels.php')\n    .done(function(ret){\n      let stateCopy = JSON.parse(JSON.stringify(_this.state))\n      stateCopy.channels = ret.channels\n      _this.setState(stateCopy)\n    })\n    .fail(function(){\n      console.log('error');\n    })\n  }\n  clickLeft(){\n    if(this.state.isLoadAnimate) return\n\n    var coverWidth = $('footer').find('li').outerWidth(true);\n    var rowCount = Math.floor($('footer').find('.layout').width() / coverWidth )\n    if(!this.state.isToStart){\n      this.setState({\n        isLoadAnimate: true\n      })\n      $('footer ul').animate({\n        left: '+=' + rowCount * coverWidth\n      }, 400, ()=> {\n        this.setState({\n          isToButtom: false,\n          isLoadAnimate: false\n        })\n        if(parseInt($('footer ul').css('left')) >= 0){\n             this.setState({\n               isToStart: true\n             })\n           }\n      })\n    }\n  }\n  clickRight(){\n    if(this.state.isLoadAnimate) return\n\n    var coverWidth = $('footer').find('li').outerWidth(true);\n    var rowCount = Math.floor($('footer').find('.layout').width() / coverWidth )\n    if(!this.state.isToButtom){\n      this.setState({\n        isLoadAnimate: true\n      })\n      $('footer ul').animate({\n        left: '-=' + rowCount * coverWidth\n      }, 400, ()=> {\n        this.setState({\n          isToStart: false,\n          isLoadAnimate: false\n        })\n        if(parseInt($('footer .layout').width()) - parseInt($('footer ul').css('left'))\n           > parseInt($('footer ul').css('width'))){\n             this.setState({\n               isToButtom: true\n             })\n           }\n      })\n    }\n  }\n  clickActive(event){\n  \n    var el = event.currentTarget\n    var index = [].indexOf.call(el.parentElement.children, el)\n    //console.log(this.state.channels[index].channel_id)\n    var Id = this.state.channels[index].channel_id\n    var Name = this.state.channels[index].name\n    //console.log('Id: ' + Id)\n    //console.log('Name:' + Name)\n    $(el).addClass('active')\n    .siblings().removeClass('active')\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.channelId = Id\n    stateCopy.channelName = Name\n    this.setState(stateCopy)\n    this.playSong()\n  }\n  playSong(){\n    var _this = this\n    $.getJSON('https://jirenguapi.applinzi.com/fm/getSong.php',{channel: _this.state.channelId})\n     .done(function(ret){\n        //console.log(ret.song[0]);\n        let stateCopy = JSON.parse(JSON.stringify(_this.state))\n        stateCopy.song = ret.song[0]\n        _this.setState(stateCopy)\n        _this.audio.src = ret.song[0].url\n        $('.music-panel figure').css('background-image', 'url(' + ret.song[0].picture + ')')\n        $('.background').css('background-image','url(' + ret.song[0].picture + ')');\n        //_this.play(ret.song[0]);\n        _this.loadLyric(ret.song[0].sid)\n    });\n  }\n  clickPlay(){\n    var _this = this\n    var $play = $('.btn-play')\n    if($play.hasClass('icon-stop')){\n      $play.removeClass('icon-stop').addClass('icon-play')\n      _this.audio.pause()\n    }else{\n      $play.removeClass('icon-play').addClass('icon-stop')\n      _this.audio.play()\n    }\n  }\n  playNext(){\n    this.playSong()\n  }\n  updateStatue(){\n    var min = Math.floor(this.audio.currentTime/60);\n    var sec = Math.floor(this.audio.currentTime%60) + '';\n    sec = sec.length ===2? sec : '0' + sec;\n    $('.detail .current-time').text(min + ':' + sec);\n    $('.detail .bar-progress').css('width',this.audio.currentTime/this.audio.duration*100 + '%');\n    var line = this.state.lyric['0' + min + ':' + sec]\n    if(line){\n      $('.detail .lyric p').text(line).boomText('rollIn');\n    }\n  }\n  changeTime(e){\n    var percent = (e.clientX - e.currentTarget.getBoundingClientRect().x) /\n    parseInt(getComputedStyle(e.currentTarget).width)\n    this.audio.currentTime = percent * this.audio.duration\n  }\n  loadLyric(sid){\n    var _this = this\n    $.getJSON('https://jirenguapi.applinzi.com/fm/getLyric.php',{sid: sid})\n    .done(function(ret){\n     //  console.log('lyric',ret);\n     //  var lyric = ret.lyric;\n      var lyricObj = {};\n     ret.lyric.split('\\n').forEach(function(line){\n       var times = line.match(/\\d{2}:\\d{2}/g);\n       if(Array.isArray(times)){\n         times.forEach(function(time){\n           lyricObj[time] = line.replace(/\\[.+?\\]/g,'');\n         });\n       }\n     });\n     // console.log(lyricObj);\n     _this.setState({\n       lyric: lyricObj\n     })\n    })\n  }\n  render() {\n    let covers = this.state.channels\n    .map((item,index) => {\n      return (\n        <li key = {index} className=\"cover\" onClick={this.clickActive.bind(this)}>\n          <CoverItem channel={item}></CoverItem>\n        </li>\n      )\n    })\n    var _this = this\n    this.audio.addEventListener('play',function(){\n      //console.log('play');\n      clearInterval(_this.statusClock);\n      _this.statusClock = setInterval(function(){\n        _this.updateStatue();\n      },1000);\n    });\n    this.audio.addEventListener('pause',function(){\n      clearInterval(_this.statusClock);\n      //console.log('pause');\n    });\n    this.audio.addEventListener('ended',function(){\n      //console.log('ended');\n      _this.playSong();\n    });\n    return (\n      <div className=\"App\">\n        <section id=\"page-music\">\n          <Music chId={this.state.channelId}\n            chName={this.state.channelName}\n            song={this.state.song}\n            onclickPlay={this.clickPlay.bind(this)}\n            onNext={this.playNext.bind(this)}\n            onChangeTime={this.changeTime.bind(this)}/>\n          <footer>\n            <div className=\"layout\">\n              <span className=\"iconfont icon-back\" onClick={this.clickLeft.bind(this)}></span>\n              <span className=\"iconfont icon-right\" onClick={this.clickRight.bind(this)}></span>\n              <div className=\"music-box\">\n                <ul className=\"clearfix\">\n                  {covers}\n                </ul>\n              </div>\n            </div>\n          </footer>\n        </section>\n        <div className=\"background\"></div>\n      </div>\n    );\n  }\n}\n\n$.fn.boomText = function(type){\n  type = type || 'rollIn';\n  this.html(function(){\n    var arr = $(this).text().split('')\n              .map(function(word){\n                return '<span class=\"boomText\">' + word + '</span>';\n              });\n    return arr.join('');\n  });\n\n  var index = 0;\n  var $boomTexts = $(this).find('span');\n  var clock = setInterval(function(){\n    $boomTexts.eq(index).addClass('animated '+ type);\n    index++;\n    if(index >= $boomTexts.length){\n      clearInterval(clock);\n    }\n  },200);\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}