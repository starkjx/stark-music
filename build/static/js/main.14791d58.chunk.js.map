{"version":3,"sources":["CoverItem.js","Music.js","App.js","serviceWorker.js","index.js"],"names":["CoverItem","width","$","find","outerWidth","css","react_default","a","createElement","style","backgroundImage","this","props","channel","cover_small","name","Component","Music","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","className","onClick","onclickPlay","chName","song","title","artist","App","channels","channelId","channelName","isToButtom","isToStart","isLoadAnimate","audio","Audio","autoplay","getJSON","done","ret","stateCopy","JSON","parse","stringify","setState","fail","console","log","_this2","coverWidth","rowCount","Math","floor","animate","left","parseInt","_this3","event","el","currentTarget","index","indexOf","parentElement","children","Id","channel_id","Name","addClass","siblings","removeClass","playSong","src","url","picture","$play","hasClass","pause","play","_this4","covers","map","item","key","clickActive","bind","CoverItem_CoverItem","id","Music_Music","chId","clickPlay","clickLeft","clickRight","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.14791d58.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport './CoverItem.css'\r\nimport $ from 'jquery'\r\n\r\nexport default class CoverItem extends Component{\r\n  componentDidMount(){\r\n    var width = $('footer').find('li').outerWidth(true)\r\n    //console.log(width)\r\n    $('ul').css({width: 40 * width + 'px'})\r\n  }\r\n  render(){\r\n    return(\r\n      <div>\r\n        <div style={{backgroundImage: 'url('+this.props.channel.cover_small + ')'}}></div>\r\n        <h3>{this.props.channel.name}</h3>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport './Music.css'\r\n// import $ from 'jquery'\r\n\r\nexport default class Music extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      \r\n    }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <main className='layout'>\r\n        <div className=\"music-panel\">\r\n          <figure></figure>\r\n          <div className=\"actions clearfix\">\r\n            <span className=\"btn-collect iconfont icon-like\"></span>\r\n            <span className=\"btn-play iconfont icon-play\" onClick={this.props.onclickPlay}></span>\r\n            <span className=\"btn-next iconfont icon-next\"></span>\r\n          </div>\r\n        </div>\r\n        <div className=\"detail\">\r\n          <span className=\"tag\">{this.props.chName || 'stark'}</span>\r\n          <h1>{this.props.song.title || 'SONG NAME'}</h1>\r\n          <ul className=\"icons clearfix\">\r\n            <li><span className=\"iconfont icon-music\">1234</span></li>\r\n            <li><span className=\"iconfont icon-like\">123</span></li>\r\n            <li><span className=\"iconfont icon-appreciate\">12</span></li>\r\n          </ul>\r\n          <div className=\"time-area\">\r\n            <div className=\"bar\">\r\n              <div className=\"bar-progress\"></div>\r\n            </div>\r\n            <div className=\"current-time\">0:00</div>\r\n          </div>\r\n          <div className=\"author\">{this.props.song.artist || 'author'}</div>\r\n          <div className=\"lyric\">\r\n            <p>lyric</p>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport 'normalize.css'\nimport './reset.css'\nimport $ from 'jquery'\nimport CoverItem from './CoverItem'\nimport Music from './Music'\n//import {getChannels} from './DataJSON'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      channels: [],\n      channelId: '',\n      channelName: 'stark',\n      isToButtom: false,\n      isToStart: true,\n      isLoadAnimate: false,\n      song: []\n    }\n    this.audio = new Audio()\n    this.audio.autoplay = true\n  }\n  componentDidMount(){\n    var _this =this\n    $.getJSON('https://jirenguapi.applinzi.com/fm/getChannels.php')\n    .done(function(ret){\n      let stateCopy = JSON.parse(JSON.stringify(_this.state))\n      stateCopy.channels = ret.channels\n      _this.setState(stateCopy)\n    })\n    .fail(function(){\n      console.log('error');\n    })\n  }\n  clickLeft(){\n    if(this.state.isLoadAnimate) return\n\n    var coverWidth = $('footer').find('li').outerWidth(true);\n    var rowCount = Math.floor($('footer').find('.layout').width() / coverWidth )\n    if(!this.state.isToStart){\n      this.setState({\n        isLoadAnimate: true\n      })\n      $('footer ul').animate({\n        left: '+=' + rowCount * coverWidth\n      }, 400, ()=> {\n        this.setState({\n          isToButtom: false,\n          isLoadAnimate: false\n        })\n        if(parseInt($('footer ul').css('left')) >= 0){\n             this.setState({\n               isToStart: true\n             })\n           }\n      })\n    }\n  }\n  clickRight(){\n    if(this.state.isLoadAnimate) return\n\n    var coverWidth = $('footer').find('li').outerWidth(true);\n    var rowCount = Math.floor($('footer').find('.layout').width() / coverWidth )\n    if(!this.state.isToButtom){\n      this.setState({\n        isLoadAnimate: true\n      })\n      $('footer ul').animate({\n        left: '-=' + rowCount * coverWidth\n      }, 400, ()=> {\n        this.setState({\n          isToStart: false,\n          isLoadAnimate: false\n        })\n        if(parseInt($('footer .layout').width()) - parseInt($('footer ul').css('left'))\n           > parseInt($('footer ul').css('width'))){\n             this.setState({\n               isToButtom: true\n             })\n           }\n      })\n    }\n  }\n  clickActive(event){\n  \n    var el = event.currentTarget\n    var index = [].indexOf.call(el.parentElement.children, el)\n    //console.log(this.state.channels[index].channel_id)\n    var Id = this.state.channels[index].channel_id\n    var Name = this.state.channels[index].name\n    //console.log('Id: ' + Id)\n    //console.log('Name:' + Name)\n    $(el).addClass('active')\n    .siblings().removeClass('active')\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.channelId = Id\n    stateCopy.channelName = Name\n    this.setState(stateCopy)\n    this.playSong()\n  }\n  playSong(){\n    var _this = this\n    $.getJSON('https://jirenguapi.applinzi.com/fm/getSong.php',{channel: _this.state.channelId})\n     .done(function(ret){\n        //console.log(ret.song[0]);\n        let stateCopy = JSON.parse(JSON.stringify(_this.state))\n        stateCopy.song = ret.song[0]\n        _this.setState(stateCopy)\n        //_this.play(ret.song[0]);\n    });\n    _this.audio.src = this.state.song.url\n    $('.music-panel figure').css('background-image', 'url(' + this.state.song.picture + ')')\n    $('.background').css('background-image','url(' + this.state.song.picture + ')');\n  }\n  clickPlay(){\n    var _this = this\n    var $play = $('.btn-play')\n    if($play.hasClass('icon-stop')){\n      $play.removeClass('icon-stop').addClass('icon-play')\n      _this.audio.pause()\n    }else{\n      $play.removeClass('icon-play').addClass('icon-stop')\n      _this.audio.play()\n    }\n  }\n  render() {\n    let covers = this.state.channels\n    .map((item,index) => {\n      return (\n        <li key = {index} className=\"cover\" onClick={this.clickActive.bind(this)}>\n          <CoverItem channel={item}></CoverItem>\n        </li>\n      )\n    })\n    return (\n      <div className=\"App\">\n        <section id=\"page-music\">\n          <Music chId={this.state.channelId}\n            chName={this.state.channelName}\n            song={this.state.song}\n            onclickPlay={this.clickPlay.bind(this)}/>\n          <footer>\n            <div className=\"layout\">\n              <span className=\"iconfont icon-back\" onClick={this.clickLeft.bind(this)}></span>\n              <span className=\"iconfont icon-right\" onClick={this.clickRight.bind(this)}></span>\n              <div className=\"music-box\">\n                <ul className=\"clearfix\">\n                  {covers}\n                </ul>\n              </div>\n            </div>\n          </footer>\n        </section>\n        <div className=\"background\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}